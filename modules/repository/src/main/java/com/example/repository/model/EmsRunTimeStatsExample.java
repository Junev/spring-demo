package com.example.repository.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class EmsRunTimeStatsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table EMS_RUN_TIME_STATS
     *
     * @mbg.generated Fri May 16 11:19:14 CST 2025
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table EMS_RUN_TIME_STATS
     *
     * @mbg.generated Fri May 16 11:19:14 CST 2025
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table EMS_RUN_TIME_STATS
     *
     * @mbg.generated Fri May 16 11:19:14 CST 2025
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EMS_RUN_TIME_STATS
     *
     * @mbg.generated Fri May 16 11:19:14 CST 2025
     */
    public EmsRunTimeStatsExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EMS_RUN_TIME_STATS
     *
     * @mbg.generated Fri May 16 11:19:14 CST 2025
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EMS_RUN_TIME_STATS
     *
     * @mbg.generated Fri May 16 11:19:14 CST 2025
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EMS_RUN_TIME_STATS
     *
     * @mbg.generated Fri May 16 11:19:14 CST 2025
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EMS_RUN_TIME_STATS
     *
     * @mbg.generated Fri May 16 11:19:14 CST 2025
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EMS_RUN_TIME_STATS
     *
     * @mbg.generated Fri May 16 11:19:14 CST 2025
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EMS_RUN_TIME_STATS
     *
     * @mbg.generated Fri May 16 11:19:14 CST 2025
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EMS_RUN_TIME_STATS
     *
     * @mbg.generated Fri May 16 11:19:14 CST 2025
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EMS_RUN_TIME_STATS
     *
     * @mbg.generated Fri May 16 11:19:14 CST 2025
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EMS_RUN_TIME_STATS
     *
     * @mbg.generated Fri May 16 11:19:14 CST 2025
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EMS_RUN_TIME_STATS
     *
     * @mbg.generated Fri May 16 11:19:14 CST 2025
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table EMS_RUN_TIME_STATS
     *
     * @mbg.generated Fri May 16 11:19:14 CST 2025
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andEquipelementidIsNull() {
            addCriterion("EQUIPELEMENTID is null");
            return (Criteria) this;
        }

        public Criteria andEquipelementidIsNotNull() {
            addCriterion("EQUIPELEMENTID is not null");
            return (Criteria) this;
        }

        public Criteria andEquipelementidEqualTo(String value) {
            addCriterion("EQUIPELEMENTID =", value, "equipelementid");
            return (Criteria) this;
        }

        public Criteria andEquipelementidNotEqualTo(String value) {
            addCriterion("EQUIPELEMENTID <>", value, "equipelementid");
            return (Criteria) this;
        }

        public Criteria andEquipelementidGreaterThan(String value) {
            addCriterion("EQUIPELEMENTID >", value, "equipelementid");
            return (Criteria) this;
        }

        public Criteria andEquipelementidGreaterThanOrEqualTo(String value) {
            addCriterion("EQUIPELEMENTID >=", value, "equipelementid");
            return (Criteria) this;
        }

        public Criteria andEquipelementidLessThan(String value) {
            addCriterion("EQUIPELEMENTID <", value, "equipelementid");
            return (Criteria) this;
        }

        public Criteria andEquipelementidLessThanOrEqualTo(String value) {
            addCriterion("EQUIPELEMENTID <=", value, "equipelementid");
            return (Criteria) this;
        }

        public Criteria andEquipelementidLike(String value) {
            addCriterion("EQUIPELEMENTID like", value, "equipelementid");
            return (Criteria) this;
        }

        public Criteria andEquipelementidNotLike(String value) {
            addCriterion("EQUIPELEMENTID not like", value, "equipelementid");
            return (Criteria) this;
        }

        public Criteria andEquipelementidIn(List<String> values) {
            addCriterion("EQUIPELEMENTID in", values, "equipelementid");
            return (Criteria) this;
        }

        public Criteria andEquipelementidNotIn(List<String> values) {
            addCriterion("EQUIPELEMENTID not in", values, "equipelementid");
            return (Criteria) this;
        }

        public Criteria andEquipelementidBetween(String value1, String value2) {
            addCriterion("EQUIPELEMENTID between", value1, value2, "equipelementid");
            return (Criteria) this;
        }

        public Criteria andEquipelementidNotBetween(String value1, String value2) {
            addCriterion("EQUIPELEMENTID not between", value1, value2, "equipelementid");
            return (Criteria) this;
        }

        public Criteria andEquippropertyidIsNull() {
            addCriterion("EQUIPPROPERTYID is null");
            return (Criteria) this;
        }

        public Criteria andEquippropertyidIsNotNull() {
            addCriterion("EQUIPPROPERTYID is not null");
            return (Criteria) this;
        }

        public Criteria andEquippropertyidEqualTo(String value) {
            addCriterion("EQUIPPROPERTYID =", value, "equippropertyid");
            return (Criteria) this;
        }

        public Criteria andEquippropertyidNotEqualTo(String value) {
            addCriterion("EQUIPPROPERTYID <>", value, "equippropertyid");
            return (Criteria) this;
        }

        public Criteria andEquippropertyidGreaterThan(String value) {
            addCriterion("EQUIPPROPERTYID >", value, "equippropertyid");
            return (Criteria) this;
        }

        public Criteria andEquippropertyidGreaterThanOrEqualTo(String value) {
            addCriterion("EQUIPPROPERTYID >=", value, "equippropertyid");
            return (Criteria) this;
        }

        public Criteria andEquippropertyidLessThan(String value) {
            addCriterion("EQUIPPROPERTYID <", value, "equippropertyid");
            return (Criteria) this;
        }

        public Criteria andEquippropertyidLessThanOrEqualTo(String value) {
            addCriterion("EQUIPPROPERTYID <=", value, "equippropertyid");
            return (Criteria) this;
        }

        public Criteria andEquippropertyidLike(String value) {
            addCriterion("EQUIPPROPERTYID like", value, "equippropertyid");
            return (Criteria) this;
        }

        public Criteria andEquippropertyidNotLike(String value) {
            addCriterion("EQUIPPROPERTYID not like", value, "equippropertyid");
            return (Criteria) this;
        }

        public Criteria andEquippropertyidIn(List<String> values) {
            addCriterion("EQUIPPROPERTYID in", values, "equippropertyid");
            return (Criteria) this;
        }

        public Criteria andEquippropertyidNotIn(List<String> values) {
            addCriterion("EQUIPPROPERTYID not in", values, "equippropertyid");
            return (Criteria) this;
        }

        public Criteria andEquippropertyidBetween(String value1, String value2) {
            addCriterion("EQUIPPROPERTYID between", value1, value2, "equippropertyid");
            return (Criteria) this;
        }

        public Criteria andEquippropertyidNotBetween(String value1, String value2) {
            addCriterion("EQUIPPROPERTYID not between", value1, value2, "equippropertyid");
            return (Criteria) this;
        }

        public Criteria andEmspropertyidIsNull() {
            addCriterion("EMSPROPERTYID is null");
            return (Criteria) this;
        }

        public Criteria andEmspropertyidIsNotNull() {
            addCriterion("EMSPROPERTYID is not null");
            return (Criteria) this;
        }

        public Criteria andEmspropertyidEqualTo(String value) {
            addCriterion("EMSPROPERTYID =", value, "emspropertyid");
            return (Criteria) this;
        }

        public Criteria andEmspropertyidNotEqualTo(String value) {
            addCriterion("EMSPROPERTYID <>", value, "emspropertyid");
            return (Criteria) this;
        }

        public Criteria andEmspropertyidGreaterThan(String value) {
            addCriterion("EMSPROPERTYID >", value, "emspropertyid");
            return (Criteria) this;
        }

        public Criteria andEmspropertyidGreaterThanOrEqualTo(String value) {
            addCriterion("EMSPROPERTYID >=", value, "emspropertyid");
            return (Criteria) this;
        }

        public Criteria andEmspropertyidLessThan(String value) {
            addCriterion("EMSPROPERTYID <", value, "emspropertyid");
            return (Criteria) this;
        }

        public Criteria andEmspropertyidLessThanOrEqualTo(String value) {
            addCriterion("EMSPROPERTYID <=", value, "emspropertyid");
            return (Criteria) this;
        }

        public Criteria andEmspropertyidLike(String value) {
            addCriterion("EMSPROPERTYID like", value, "emspropertyid");
            return (Criteria) this;
        }

        public Criteria andEmspropertyidNotLike(String value) {
            addCriterion("EMSPROPERTYID not like", value, "emspropertyid");
            return (Criteria) this;
        }

        public Criteria andEmspropertyidIn(List<String> values) {
            addCriterion("EMSPROPERTYID in", values, "emspropertyid");
            return (Criteria) this;
        }

        public Criteria andEmspropertyidNotIn(List<String> values) {
            addCriterion("EMSPROPERTYID not in", values, "emspropertyid");
            return (Criteria) this;
        }

        public Criteria andEmspropertyidBetween(String value1, String value2) {
            addCriterion("EMSPROPERTYID between", value1, value2, "emspropertyid");
            return (Criteria) this;
        }

        public Criteria andEmspropertyidNotBetween(String value1, String value2) {
            addCriterion("EMSPROPERTYID not between", value1, value2, "emspropertyid");
            return (Criteria) this;
        }

        public Criteria andRecorddateIsNull() {
            addCriterion("RECORDDATE is null");
            return (Criteria) this;
        }

        public Criteria andRecorddateIsNotNull() {
            addCriterion("RECORDDATE is not null");
            return (Criteria) this;
        }

        public Criteria andRecorddateEqualTo(Date value) {
            addCriterionForJDBCDate("RECORDDATE =", value, "recorddate");
            return (Criteria) this;
        }

        public Criteria andRecorddateNotEqualTo(Date value) {
            addCriterionForJDBCDate("RECORDDATE <>", value, "recorddate");
            return (Criteria) this;
        }

        public Criteria andRecorddateGreaterThan(Date value) {
            addCriterionForJDBCDate("RECORDDATE >", value, "recorddate");
            return (Criteria) this;
        }

        public Criteria andRecorddateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("RECORDDATE >=", value, "recorddate");
            return (Criteria) this;
        }

        public Criteria andRecorddateLessThan(Date value) {
            addCriterionForJDBCDate("RECORDDATE <", value, "recorddate");
            return (Criteria) this;
        }

        public Criteria andRecorddateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("RECORDDATE <=", value, "recorddate");
            return (Criteria) this;
        }

        public Criteria andRecorddateIn(List<Date> values) {
            addCriterionForJDBCDate("RECORDDATE in", values, "recorddate");
            return (Criteria) this;
        }

        public Criteria andRecorddateNotIn(List<Date> values) {
            addCriterionForJDBCDate("RECORDDATE not in", values, "recorddate");
            return (Criteria) this;
        }

        public Criteria andRecorddateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("RECORDDATE between", value1, value2, "recorddate");
            return (Criteria) this;
        }

        public Criteria andRecorddateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("RECORDDATE not between", value1, value2, "recorddate");
            return (Criteria) this;
        }

        public Criteria andPropertyvalueIsNull() {
            addCriterion("PROPERTYVALUE is null");
            return (Criteria) this;
        }

        public Criteria andPropertyvalueIsNotNull() {
            addCriterion("PROPERTYVALUE is not null");
            return (Criteria) this;
        }

        public Criteria andPropertyvalueEqualTo(Long value) {
            addCriterion("PROPERTYVALUE =", value, "propertyvalue");
            return (Criteria) this;
        }

        public Criteria andPropertyvalueNotEqualTo(Long value) {
            addCriterion("PROPERTYVALUE <>", value, "propertyvalue");
            return (Criteria) this;
        }

        public Criteria andPropertyvalueGreaterThan(Long value) {
            addCriterion("PROPERTYVALUE >", value, "propertyvalue");
            return (Criteria) this;
        }

        public Criteria andPropertyvalueGreaterThanOrEqualTo(Long value) {
            addCriterion("PROPERTYVALUE >=", value, "propertyvalue");
            return (Criteria) this;
        }

        public Criteria andPropertyvalueLessThan(Long value) {
            addCriterion("PROPERTYVALUE <", value, "propertyvalue");
            return (Criteria) this;
        }

        public Criteria andPropertyvalueLessThanOrEqualTo(Long value) {
            addCriterion("PROPERTYVALUE <=", value, "propertyvalue");
            return (Criteria) this;
        }

        public Criteria andPropertyvalueIn(List<Long> values) {
            addCriterion("PROPERTYVALUE in", values, "propertyvalue");
            return (Criteria) this;
        }

        public Criteria andPropertyvalueNotIn(List<Long> values) {
            addCriterion("PROPERTYVALUE not in", values, "propertyvalue");
            return (Criteria) this;
        }

        public Criteria andPropertyvalueBetween(Long value1, Long value2) {
            addCriterion("PROPERTYVALUE between", value1, value2, "propertyvalue");
            return (Criteria) this;
        }

        public Criteria andPropertyvalueNotBetween(Long value1, Long value2) {
            addCriterion("PROPERTYVALUE not between", value1, value2, "propertyvalue");
            return (Criteria) this;
        }

        public Criteria andDeltavalueIsNull() {
            addCriterion("DELTAVALUE is null");
            return (Criteria) this;
        }

        public Criteria andDeltavalueIsNotNull() {
            addCriterion("DELTAVALUE is not null");
            return (Criteria) this;
        }

        public Criteria andDeltavalueEqualTo(Long value) {
            addCriterion("DELTAVALUE =", value, "deltavalue");
            return (Criteria) this;
        }

        public Criteria andDeltavalueNotEqualTo(Long value) {
            addCriterion("DELTAVALUE <>", value, "deltavalue");
            return (Criteria) this;
        }

        public Criteria andDeltavalueGreaterThan(Long value) {
            addCriterion("DELTAVALUE >", value, "deltavalue");
            return (Criteria) this;
        }

        public Criteria andDeltavalueGreaterThanOrEqualTo(Long value) {
            addCriterion("DELTAVALUE >=", value, "deltavalue");
            return (Criteria) this;
        }

        public Criteria andDeltavalueLessThan(Long value) {
            addCriterion("DELTAVALUE <", value, "deltavalue");
            return (Criteria) this;
        }

        public Criteria andDeltavalueLessThanOrEqualTo(Long value) {
            addCriterion("DELTAVALUE <=", value, "deltavalue");
            return (Criteria) this;
        }

        public Criteria andDeltavalueIn(List<Long> values) {
            addCriterion("DELTAVALUE in", values, "deltavalue");
            return (Criteria) this;
        }

        public Criteria andDeltavalueNotIn(List<Long> values) {
            addCriterion("DELTAVALUE not in", values, "deltavalue");
            return (Criteria) this;
        }

        public Criteria andDeltavalueBetween(Long value1, Long value2) {
            addCriterion("DELTAVALUE between", value1, value2, "deltavalue");
            return (Criteria) this;
        }

        public Criteria andDeltavalueNotBetween(Long value1, Long value2) {
            addCriterion("DELTAVALUE not between", value1, value2, "deltavalue");
            return (Criteria) this;
        }

        public Criteria andRecordtimeIsNull() {
            addCriterion("RECORDTIME is null");
            return (Criteria) this;
        }

        public Criteria andRecordtimeIsNotNull() {
            addCriterion("RECORDTIME is not null");
            return (Criteria) this;
        }

        public Criteria andRecordtimeEqualTo(Date value) {
            addCriterion("RECORDTIME =", value, "recordtime");
            return (Criteria) this;
        }

        public Criteria andRecordtimeNotEqualTo(Date value) {
            addCriterion("RECORDTIME <>", value, "recordtime");
            return (Criteria) this;
        }

        public Criteria andRecordtimeGreaterThan(Date value) {
            addCriterion("RECORDTIME >", value, "recordtime");
            return (Criteria) this;
        }

        public Criteria andRecordtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("RECORDTIME >=", value, "recordtime");
            return (Criteria) this;
        }

        public Criteria andRecordtimeLessThan(Date value) {
            addCriterion("RECORDTIME <", value, "recordtime");
            return (Criteria) this;
        }

        public Criteria andRecordtimeLessThanOrEqualTo(Date value) {
            addCriterion("RECORDTIME <=", value, "recordtime");
            return (Criteria) this;
        }

        public Criteria andRecordtimeIn(List<Date> values) {
            addCriterion("RECORDTIME in", values, "recordtime");
            return (Criteria) this;
        }

        public Criteria andRecordtimeNotIn(List<Date> values) {
            addCriterion("RECORDTIME not in", values, "recordtime");
            return (Criteria) this;
        }

        public Criteria andRecordtimeBetween(Date value1, Date value2) {
            addCriterion("RECORDTIME between", value1, value2, "recordtime");
            return (Criteria) this;
        }

        public Criteria andRecordtimeNotBetween(Date value1, Date value2) {
            addCriterion("RECORDTIME not between", value1, value2, "recordtime");
            return (Criteria) this;
        }

        public Criteria andStoptimeIsNull() {
            addCriterion("STOPTIME is null");
            return (Criteria) this;
        }

        public Criteria andStoptimeIsNotNull() {
            addCriterion("STOPTIME is not null");
            return (Criteria) this;
        }

        public Criteria andStoptimeEqualTo(Long value) {
            addCriterion("STOPTIME =", value, "stoptime");
            return (Criteria) this;
        }

        public Criteria andStoptimeNotEqualTo(Long value) {
            addCriterion("STOPTIME <>", value, "stoptime");
            return (Criteria) this;
        }

        public Criteria andStoptimeGreaterThan(Long value) {
            addCriterion("STOPTIME >", value, "stoptime");
            return (Criteria) this;
        }

        public Criteria andStoptimeGreaterThanOrEqualTo(Long value) {
            addCriterion("STOPTIME >=", value, "stoptime");
            return (Criteria) this;
        }

        public Criteria andStoptimeLessThan(Long value) {
            addCriterion("STOPTIME <", value, "stoptime");
            return (Criteria) this;
        }

        public Criteria andStoptimeLessThanOrEqualTo(Long value) {
            addCriterion("STOPTIME <=", value, "stoptime");
            return (Criteria) this;
        }

        public Criteria andStoptimeIn(List<Long> values) {
            addCriterion("STOPTIME in", values, "stoptime");
            return (Criteria) this;
        }

        public Criteria andStoptimeNotIn(List<Long> values) {
            addCriterion("STOPTIME not in", values, "stoptime");
            return (Criteria) this;
        }

        public Criteria andStoptimeBetween(Long value1, Long value2) {
            addCriterion("STOPTIME between", value1, value2, "stoptime");
            return (Criteria) this;
        }

        public Criteria andStoptimeNotBetween(Long value1, Long value2) {
            addCriterion("STOPTIME not between", value1, value2, "stoptime");
            return (Criteria) this;
        }

        public Criteria andNofaulttimeIsNull() {
            addCriterion("NOFAULTTIME is null");
            return (Criteria) this;
        }

        public Criteria andNofaulttimeIsNotNull() {
            addCriterion("NOFAULTTIME is not null");
            return (Criteria) this;
        }

        public Criteria andNofaulttimeEqualTo(Long value) {
            addCriterion("NOFAULTTIME =", value, "nofaulttime");
            return (Criteria) this;
        }

        public Criteria andNofaulttimeNotEqualTo(Long value) {
            addCriterion("NOFAULTTIME <>", value, "nofaulttime");
            return (Criteria) this;
        }

        public Criteria andNofaulttimeGreaterThan(Long value) {
            addCriterion("NOFAULTTIME >", value, "nofaulttime");
            return (Criteria) this;
        }

        public Criteria andNofaulttimeGreaterThanOrEqualTo(Long value) {
            addCriterion("NOFAULTTIME >=", value, "nofaulttime");
            return (Criteria) this;
        }

        public Criteria andNofaulttimeLessThan(Long value) {
            addCriterion("NOFAULTTIME <", value, "nofaulttime");
            return (Criteria) this;
        }

        public Criteria andNofaulttimeLessThanOrEqualTo(Long value) {
            addCriterion("NOFAULTTIME <=", value, "nofaulttime");
            return (Criteria) this;
        }

        public Criteria andNofaulttimeIn(List<Long> values) {
            addCriterion("NOFAULTTIME in", values, "nofaulttime");
            return (Criteria) this;
        }

        public Criteria andNofaulttimeNotIn(List<Long> values) {
            addCriterion("NOFAULTTIME not in", values, "nofaulttime");
            return (Criteria) this;
        }

        public Criteria andNofaulttimeBetween(Long value1, Long value2) {
            addCriterion("NOFAULTTIME between", value1, value2, "nofaulttime");
            return (Criteria) this;
        }

        public Criteria andNofaulttimeNotBetween(Long value1, Long value2) {
            addCriterion("NOFAULTTIME not between", value1, value2, "nofaulttime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table EMS_RUN_TIME_STATS
     *
     * @mbg.generated do_not_delete_during_merge Fri May 16 11:19:14 CST 2025
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table EMS_RUN_TIME_STATS
     *
     * @mbg.generated Fri May 16 11:19:14 CST 2025
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}