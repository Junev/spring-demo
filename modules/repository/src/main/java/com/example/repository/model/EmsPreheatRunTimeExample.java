package com.example.repository.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class EmsPreheatRunTimeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table EMS_PREHEAT_RUN_TIME
     *
     * @mbg.generated Fri May 16 11:19:14 CST 2025
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table EMS_PREHEAT_RUN_TIME
     *
     * @mbg.generated Fri May 16 11:19:14 CST 2025
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table EMS_PREHEAT_RUN_TIME
     *
     * @mbg.generated Fri May 16 11:19:14 CST 2025
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EMS_PREHEAT_RUN_TIME
     *
     * @mbg.generated Fri May 16 11:19:14 CST 2025
     */
    public EmsPreheatRunTimeExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EMS_PREHEAT_RUN_TIME
     *
     * @mbg.generated Fri May 16 11:19:14 CST 2025
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EMS_PREHEAT_RUN_TIME
     *
     * @mbg.generated Fri May 16 11:19:14 CST 2025
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EMS_PREHEAT_RUN_TIME
     *
     * @mbg.generated Fri May 16 11:19:14 CST 2025
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EMS_PREHEAT_RUN_TIME
     *
     * @mbg.generated Fri May 16 11:19:14 CST 2025
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EMS_PREHEAT_RUN_TIME
     *
     * @mbg.generated Fri May 16 11:19:14 CST 2025
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EMS_PREHEAT_RUN_TIME
     *
     * @mbg.generated Fri May 16 11:19:14 CST 2025
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EMS_PREHEAT_RUN_TIME
     *
     * @mbg.generated Fri May 16 11:19:14 CST 2025
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EMS_PREHEAT_RUN_TIME
     *
     * @mbg.generated Fri May 16 11:19:14 CST 2025
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EMS_PREHEAT_RUN_TIME
     *
     * @mbg.generated Fri May 16 11:19:14 CST 2025
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EMS_PREHEAT_RUN_TIME
     *
     * @mbg.generated Fri May 16 11:19:14 CST 2025
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table EMS_PREHEAT_RUN_TIME
     *
     * @mbg.generated Fri May 16 11:19:14 CST 2025
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andDateIsNull() {
            addCriterion("date is null");
            return (Criteria) this;
        }

        public Criteria andDateIsNotNull() {
            addCriterion("date is not null");
            return (Criteria) this;
        }

        public Criteria andDateEqualTo(Date value) {
            addCriterionForJDBCDate("date =", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("date <>", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateGreaterThan(Date value) {
            addCriterionForJDBCDate("date >", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("date >=", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateLessThan(Date value) {
            addCriterionForJDBCDate("date <", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("date <=", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateIn(List<Date> values) {
            addCriterionForJDBCDate("date in", values, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("date not in", values, "date");
            return (Criteria) this;
        }

        public Criteria andDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("date between", value1, value2, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("date not between", value1, value2, "date");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP1IsNull() {
            addCriterion("record_everyday_p1 is null");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP1IsNotNull() {
            addCriterion("record_everyday_p1 is not null");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP1EqualTo(Long value) {
            addCriterion("record_everyday_p1 =", value, "recordEverydayP1");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP1NotEqualTo(Long value) {
            addCriterion("record_everyday_p1 <>", value, "recordEverydayP1");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP1GreaterThan(Long value) {
            addCriterion("record_everyday_p1 >", value, "recordEverydayP1");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP1GreaterThanOrEqualTo(Long value) {
            addCriterion("record_everyday_p1 >=", value, "recordEverydayP1");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP1LessThan(Long value) {
            addCriterion("record_everyday_p1 <", value, "recordEverydayP1");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP1LessThanOrEqualTo(Long value) {
            addCriterion("record_everyday_p1 <=", value, "recordEverydayP1");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP1In(List<Long> values) {
            addCriterion("record_everyday_p1 in", values, "recordEverydayP1");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP1NotIn(List<Long> values) {
            addCriterion("record_everyday_p1 not in", values, "recordEverydayP1");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP1Between(Long value1, Long value2) {
            addCriterion("record_everyday_p1 between", value1, value2, "recordEverydayP1");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP1NotBetween(Long value1, Long value2) {
            addCriterion("record_everyday_p1 not between", value1, value2, "recordEverydayP1");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP2IsNull() {
            addCriterion("record_everyday_p2 is null");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP2IsNotNull() {
            addCriterion("record_everyday_p2 is not null");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP2EqualTo(Long value) {
            addCriterion("record_everyday_p2 =", value, "recordEverydayP2");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP2NotEqualTo(Long value) {
            addCriterion("record_everyday_p2 <>", value, "recordEverydayP2");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP2GreaterThan(Long value) {
            addCriterion("record_everyday_p2 >", value, "recordEverydayP2");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP2GreaterThanOrEqualTo(Long value) {
            addCriterion("record_everyday_p2 >=", value, "recordEverydayP2");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP2LessThan(Long value) {
            addCriterion("record_everyday_p2 <", value, "recordEverydayP2");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP2LessThanOrEqualTo(Long value) {
            addCriterion("record_everyday_p2 <=", value, "recordEverydayP2");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP2In(List<Long> values) {
            addCriterion("record_everyday_p2 in", values, "recordEverydayP2");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP2NotIn(List<Long> values) {
            addCriterion("record_everyday_p2 not in", values, "recordEverydayP2");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP2Between(Long value1, Long value2) {
            addCriterion("record_everyday_p2 between", value1, value2, "recordEverydayP2");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP2NotBetween(Long value1, Long value2) {
            addCriterion("record_everyday_p2 not between", value1, value2, "recordEverydayP2");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP3IsNull() {
            addCriterion("record_everyday_p3 is null");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP3IsNotNull() {
            addCriterion("record_everyday_p3 is not null");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP3EqualTo(Long value) {
            addCriterion("record_everyday_p3 =", value, "recordEverydayP3");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP3NotEqualTo(Long value) {
            addCriterion("record_everyday_p3 <>", value, "recordEverydayP3");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP3GreaterThan(Long value) {
            addCriterion("record_everyday_p3 >", value, "recordEverydayP3");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP3GreaterThanOrEqualTo(Long value) {
            addCriterion("record_everyday_p3 >=", value, "recordEverydayP3");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP3LessThan(Long value) {
            addCriterion("record_everyday_p3 <", value, "recordEverydayP3");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP3LessThanOrEqualTo(Long value) {
            addCriterion("record_everyday_p3 <=", value, "recordEverydayP3");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP3In(List<Long> values) {
            addCriterion("record_everyday_p3 in", values, "recordEverydayP3");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP3NotIn(List<Long> values) {
            addCriterion("record_everyday_p3 not in", values, "recordEverydayP3");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP3Between(Long value1, Long value2) {
            addCriterion("record_everyday_p3 between", value1, value2, "recordEverydayP3");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP3NotBetween(Long value1, Long value2) {
            addCriterion("record_everyday_p3 not between", value1, value2, "recordEverydayP3");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP4IsNull() {
            addCriterion("record_everyday_p4 is null");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP4IsNotNull() {
            addCriterion("record_everyday_p4 is not null");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP4EqualTo(Long value) {
            addCriterion("record_everyday_p4 =", value, "recordEverydayP4");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP4NotEqualTo(Long value) {
            addCriterion("record_everyday_p4 <>", value, "recordEverydayP4");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP4GreaterThan(Long value) {
            addCriterion("record_everyday_p4 >", value, "recordEverydayP4");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP4GreaterThanOrEqualTo(Long value) {
            addCriterion("record_everyday_p4 >=", value, "recordEverydayP4");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP4LessThan(Long value) {
            addCriterion("record_everyday_p4 <", value, "recordEverydayP4");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP4LessThanOrEqualTo(Long value) {
            addCriterion("record_everyday_p4 <=", value, "recordEverydayP4");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP4In(List<Long> values) {
            addCriterion("record_everyday_p4 in", values, "recordEverydayP4");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP4NotIn(List<Long> values) {
            addCriterion("record_everyday_p4 not in", values, "recordEverydayP4");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP4Between(Long value1, Long value2) {
            addCriterion("record_everyday_p4 between", value1, value2, "recordEverydayP4");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP4NotBetween(Long value1, Long value2) {
            addCriterion("record_everyday_p4 not between", value1, value2, "recordEverydayP4");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP5IsNull() {
            addCriterion("record_everyday_p5 is null");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP5IsNotNull() {
            addCriterion("record_everyday_p5 is not null");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP5EqualTo(Long value) {
            addCriterion("record_everyday_p5 =", value, "recordEverydayP5");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP5NotEqualTo(Long value) {
            addCriterion("record_everyday_p5 <>", value, "recordEverydayP5");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP5GreaterThan(Long value) {
            addCriterion("record_everyday_p5 >", value, "recordEverydayP5");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP5GreaterThanOrEqualTo(Long value) {
            addCriterion("record_everyday_p5 >=", value, "recordEverydayP5");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP5LessThan(Long value) {
            addCriterion("record_everyday_p5 <", value, "recordEverydayP5");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP5LessThanOrEqualTo(Long value) {
            addCriterion("record_everyday_p5 <=", value, "recordEverydayP5");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP5In(List<Long> values) {
            addCriterion("record_everyday_p5 in", values, "recordEverydayP5");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP5NotIn(List<Long> values) {
            addCriterion("record_everyday_p5 not in", values, "recordEverydayP5");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP5Between(Long value1, Long value2) {
            addCriterion("record_everyday_p5 between", value1, value2, "recordEverydayP5");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP5NotBetween(Long value1, Long value2) {
            addCriterion("record_everyday_p5 not between", value1, value2, "recordEverydayP5");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP6IsNull() {
            addCriterion("record_everyday_p6 is null");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP6IsNotNull() {
            addCriterion("record_everyday_p6 is not null");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP6EqualTo(Long value) {
            addCriterion("record_everyday_p6 =", value, "recordEverydayP6");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP6NotEqualTo(Long value) {
            addCriterion("record_everyday_p6 <>", value, "recordEverydayP6");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP6GreaterThan(Long value) {
            addCriterion("record_everyday_p6 >", value, "recordEverydayP6");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP6GreaterThanOrEqualTo(Long value) {
            addCriterion("record_everyday_p6 >=", value, "recordEverydayP6");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP6LessThan(Long value) {
            addCriterion("record_everyday_p6 <", value, "recordEverydayP6");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP6LessThanOrEqualTo(Long value) {
            addCriterion("record_everyday_p6 <=", value, "recordEverydayP6");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP6In(List<Long> values) {
            addCriterion("record_everyday_p6 in", values, "recordEverydayP6");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP6NotIn(List<Long> values) {
            addCriterion("record_everyday_p6 not in", values, "recordEverydayP6");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP6Between(Long value1, Long value2) {
            addCriterion("record_everyday_p6 between", value1, value2, "recordEverydayP6");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP6NotBetween(Long value1, Long value2) {
            addCriterion("record_everyday_p6 not between", value1, value2, "recordEverydayP6");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP7IsNull() {
            addCriterion("record_everyday_p7 is null");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP7IsNotNull() {
            addCriterion("record_everyday_p7 is not null");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP7EqualTo(Long value) {
            addCriterion("record_everyday_p7 =", value, "recordEverydayP7");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP7NotEqualTo(Long value) {
            addCriterion("record_everyday_p7 <>", value, "recordEverydayP7");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP7GreaterThan(Long value) {
            addCriterion("record_everyday_p7 >", value, "recordEverydayP7");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP7GreaterThanOrEqualTo(Long value) {
            addCriterion("record_everyday_p7 >=", value, "recordEverydayP7");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP7LessThan(Long value) {
            addCriterion("record_everyday_p7 <", value, "recordEverydayP7");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP7LessThanOrEqualTo(Long value) {
            addCriterion("record_everyday_p7 <=", value, "recordEverydayP7");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP7In(List<Long> values) {
            addCriterion("record_everyday_p7 in", values, "recordEverydayP7");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP7NotIn(List<Long> values) {
            addCriterion("record_everyday_p7 not in", values, "recordEverydayP7");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP7Between(Long value1, Long value2) {
            addCriterion("record_everyday_p7 between", value1, value2, "recordEverydayP7");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP7NotBetween(Long value1, Long value2) {
            addCriterion("record_everyday_p7 not between", value1, value2, "recordEverydayP7");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP8IsNull() {
            addCriterion("record_everyday_p8 is null");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP8IsNotNull() {
            addCriterion("record_everyday_p8 is not null");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP8EqualTo(Long value) {
            addCriterion("record_everyday_p8 =", value, "recordEverydayP8");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP8NotEqualTo(Long value) {
            addCriterion("record_everyday_p8 <>", value, "recordEverydayP8");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP8GreaterThan(Long value) {
            addCriterion("record_everyday_p8 >", value, "recordEverydayP8");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP8GreaterThanOrEqualTo(Long value) {
            addCriterion("record_everyday_p8 >=", value, "recordEverydayP8");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP8LessThan(Long value) {
            addCriterion("record_everyday_p8 <", value, "recordEverydayP8");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP8LessThanOrEqualTo(Long value) {
            addCriterion("record_everyday_p8 <=", value, "recordEverydayP8");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP8In(List<Long> values) {
            addCriterion("record_everyday_p8 in", values, "recordEverydayP8");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP8NotIn(List<Long> values) {
            addCriterion("record_everyday_p8 not in", values, "recordEverydayP8");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP8Between(Long value1, Long value2) {
            addCriterion("record_everyday_p8 between", value1, value2, "recordEverydayP8");
            return (Criteria) this;
        }

        public Criteria andRecordEverydayP8NotBetween(Long value1, Long value2) {
            addCriterion("record_everyday_p8 not between", value1, value2, "recordEverydayP8");
            return (Criteria) this;
        }

        public Criteria andRecordDateIsNull() {
            addCriterion("record_date is null");
            return (Criteria) this;
        }

        public Criteria andRecordDateIsNotNull() {
            addCriterion("record_date is not null");
            return (Criteria) this;
        }

        public Criteria andRecordDateEqualTo(Date value) {
            addCriterion("record_date =", value, "recordDate");
            return (Criteria) this;
        }

        public Criteria andRecordDateNotEqualTo(Date value) {
            addCriterion("record_date <>", value, "recordDate");
            return (Criteria) this;
        }

        public Criteria andRecordDateGreaterThan(Date value) {
            addCriterion("record_date >", value, "recordDate");
            return (Criteria) this;
        }

        public Criteria andRecordDateGreaterThanOrEqualTo(Date value) {
            addCriterion("record_date >=", value, "recordDate");
            return (Criteria) this;
        }

        public Criteria andRecordDateLessThan(Date value) {
            addCriterion("record_date <", value, "recordDate");
            return (Criteria) this;
        }

        public Criteria andRecordDateLessThanOrEqualTo(Date value) {
            addCriterion("record_date <=", value, "recordDate");
            return (Criteria) this;
        }

        public Criteria andRecordDateIn(List<Date> values) {
            addCriterion("record_date in", values, "recordDate");
            return (Criteria) this;
        }

        public Criteria andRecordDateNotIn(List<Date> values) {
            addCriterion("record_date not in", values, "recordDate");
            return (Criteria) this;
        }

        public Criteria andRecordDateBetween(Date value1, Date value2) {
            addCriterion("record_date between", value1, value2, "recordDate");
            return (Criteria) this;
        }

        public Criteria andRecordDateNotBetween(Date value1, Date value2) {
            addCriterion("record_date not between", value1, value2, "recordDate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table EMS_PREHEAT_RUN_TIME
     *
     * @mbg.generated do_not_delete_during_merge Fri May 16 11:19:14 CST 2025
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table EMS_PREHEAT_RUN_TIME
     *
     * @mbg.generated Fri May 16 11:19:14 CST 2025
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}